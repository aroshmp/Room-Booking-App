[pytest]
# Pytest configuration for Conference Room Booking System

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = .
    tests

# Coverage settings
addopts =
    -v
    --strict-markers
    --cov=app
    --cov-report=html
    --cov-report=xml
    --cov-report=term-missing
    --cov-fail-under=70
    --tb=short

# Markers for organizing tests
markers =
    unit: Unit tests
    integration: Integration tests
    smoke: Smoke tests for quick validation
    slow: Slow running tests
    us01: Tests for User Story 01 (View Available Rooms)
    us02: Tests for User Story 02 (Book Conference Room)
    us03: Tests for User Story 03 (Automatic Confirmation)
    us04: Tests for User Story 04 (Specify Room Requirements)
    us05: Tests for User Story 05 (Cancel/Modify Booking)
    us06: Tests for User Story 06 (User Authentication)
    us08: Tests for User Story 08 (Booking Reminders)

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage exclusions
[coverage:run]
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod